---
import { useSanityClient } from '@sanity/astro'
import { BlogTagsGroqQueryType, blogTagsGroqQuery } from 'src/clients/sanity'
import BlogPostLayout from 'src/layouts/BlogPostLayout.astro'
import type { TagType } from 'src/types'

type Props = TagType

export async function getStaticPaths() {
  const tags = await useSanityClient().fetch<BlogTagsGroqQueryType[]>(blogTagsGroqQuery)
  const tagsTyped = tags.map(({ title, slug, _createdAt, _updatedAt, description, posts }) => ({
    title,
    slug,
    description,
    posts: posts.map((post) => ({
      ...post,
      createdAt: new Date(post._createdAt),
      updatedAt: new Date(post._updatedAt),
    })),
    createdAt: new Date(_createdAt),
    updatedAt: new Date(_updatedAt),
  })) as unknown as TagType[]

  return tagsTyped.map((tag) => {
    return {
      params: {
        slug: tag.slug,
      },
      props: { ...tag },
    }
  })
}

const { title, description, posts, createdAt, updatedAt } = Astro.props
---

<BlogPostLayout title={title} description={description} createdAt={createdAt} updatedAt={updatedAt}>
  <p>{description}</p>
  {
    posts.map(({ title, createdAt }) => (
      <article>
        <>
          <h4>{title}</h4>
          <p>{createdAt.toString()}</p>
        </>
      </article>
    ))
  }
</BlogPostLayout>
