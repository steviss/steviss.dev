---
import { useSanityClient } from '@sanity/astro'
import {
  SanityPostsGroqQueryType,
  SanityTagsGroqQueryType,
  convertSanityPostToPost,
  convertSanityTagToTag,
  sanityPostsGroqQuery,
  sanityTagsGroqQuery,
} from 'src/clients/sanity'
import PortableText from 'src/components/sanity/PortableText.astro'
import { SITE_DESCRIPTION, SITE_TITLE } from 'src/config/consts'
import Layout from 'src/layouts/Layout.astro'

export async function getBlogPosts() {
  const posts = await useSanityClient().fetch<SanityPostsGroqQueryType[]>(sanityPostsGroqQuery)
  return convertSanityPostToPost(posts)
}

export async function getBlogTags() {
  const tags = await useSanityClient().fetch<SanityTagsGroqQueryType[]>(sanityTagsGroqQuery)
  return convertSanityTagToTag(tags)
}

const posts = await getBlogPosts()

const tags = await getBlogTags()
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <section class="flex flex-col">
    <h1>Blog</h1>
    <div class="flex flex-col">
      <div>
        <input type="text" placeholder="Search blog" />
      </div>
      <div>
        <ul class="flex">
          {
            tags.map(({ slug, title }) => (
              <li class="p-2">
                <a href={slug}>#{title}</a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </section>
  <section class="flex flex-col mx-auto p-2 text-blue-50">
    {
      posts.map(({ heroImage, title, body, tags, slug, estimatedReadingTime }) => (
        <div class="flex flex-col">
          <img width={720} height={360} src={heroImage} alt={title} />
          <a href={slug}>
            <h4>{title}</h4>
          </a>
          <h5>Reading time: {estimatedReadingTime} min</h5>
          <ul class="flex">
            {tags.map(({ slug, title }) => (
              <li class="p-2">
                <a href={slug}>#{title}</a>
              </li>
            ))}
          </ul>
          <PortableText portableText={body} />
        </div>
      ))
    }
  </section>
</Layout>
