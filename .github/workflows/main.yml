name: Release Main
#'on':
#  push:
#    branches: ['main']
'on':
  workflow_dispatch:

env:
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

jobs:
  deploy:
    environment: main
    name: Deploy the build to LionDev Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version-file: 'package.json'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Create .env file for frontend
        uses: SpicyPizza/create-envfile@v2.0.2
        with:
          envkey_SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID }}
          envkey_SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET }}
          file_name: .env
      - name: Yarn FontAwesome Setup
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn config set initScope npmScopes
          yarn config set npmScopes.fortawesome.npmRegistryServer "https://npm.fontawesome.com"
          yarn config set npmScopes.fortawesome.npmAlwaysAuth true
          yarn config set npmScopes.fortawesome.npmAuthToken $FONTAWESOME_NPM_AUTH_TOKEN
      - name: Yarn Install
        if: yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --immutable
      - name: Build for deploy
        run: yarn build
      - name: Delete and Backup Previous deployment to Alpha LionDev Cloud
        id: backup-and-delete
        uses: appleboy/ssh-action@v1.0.0
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
        with:
          host: ${{ secrets.STEVISS_SSH_HOST }}
          username: ${{ secrets.STEVISS_SSH_USERNAME }}
          key: ${{ secrets.STEVISS_SSH_KEY }}
          passphrase: ${{ secrets.STEVISS_SSH_PASSPHRASE }}
          port: ${{ secrets.STEVISS_SSH_PORT }}
          envs: DEPLOY_PATH
          script_stop: true
          script: |
            mkdir -p ~/temp-backup
            mv ~/$DEPLOY_PATH/* ~/temp-backup/
            rm -rf ~/$DEPLOY_PATH/*
      - name: Deploy build to Alpha LionDev Cloud
        id: deploy
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.STEVISS_SSH_HOST }}
          username: ${{ secrets.STEVISS_SSH_USERNAME }}
          key: ${{ secrets.STEVISS_SSH_KEY }}
          passphrase: ${{ secrets.STEVISS_SSH_PASSPHRASE }}
          port: ${{ secrets.STEVISS_SSH_PORT }}
          source: 'dist/**,.env'
          target: ${{ vars.DEPLOY_PATH }}
          overwrite: true
      - name: Cleanup deployment to Alpha LionDev Cloud
        id: cleanup
        uses: appleboy/ssh-action@v1.0.0
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
        with:
          host: ${{ secrets.STEVISS_SSH_HOST }}
          username: ${{ secrets.STEVISS_SSH_USERNAME }}
          key: ${{ secrets.STEVISS_SSH_KEY }}
          passphrase: ${{ secrets.STEVISS_SSH_PASSPHRASE }}
          port: ${{ secrets.STEVISS_SSH_PORT }}
          envs: DEPLOY_PATH
          script_stop: true
          script: |
            cd ~/$DEPLOY_PATH
            mv ~/$DEPLOY_PATH/dist/* ~/$DEPLOY_PATH/
            rm -rf ~/$DEPLOY_PATH/dist
            rm -rf ~/temp-backup
      - name: RollBack to previous Deployment to Alpha LionDev Cloud
        if: steps.deploy.outcome == 'failure' || steps.cleanup.outcome == 'failure' || steps.backup-and-delete.outcome == 'failure'
        uses: appleboy/ssh-action@v1.0.0
        env:
          DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
        with:
          host: ${{ secrets.STEVISS_SSH_HOST }}
          username: ${{ secrets.STEVISS_SSH_USERNAME }}
          key: ${{ secrets.STEVISS_SSH_KEY }}
          passphrase: ${{ secrets.STEVISS_SSH_PASSPHRASE }}
          port: ${{ secrets.STEVISS_SSH_PORT }}
          envs: DEPLOY_PATH
          script_stop: true
          script: |
            mv ~/temp-backup/* ~/$DEPLOY_PATH/
            rm -rf ~/temp-backup
